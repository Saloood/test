--[[
    /$$$$$$   /$$$$$$        /$$       /$$$$$$ /$$$$$$$  /$$$$$$$   /$$$$$$  /$$$$$$$  /$$     /$$
   /$$__  $$ /$$__  $$      | $$      |_  $$_/| $$__  $$| $$__  $$ /$$__  $$| $$__  $$|  $$   /$$/
  | $$  \__/| $$  \__/      | $$        | $$  | $$  \ $$| $$  \ $$| $$  \ $$| $$  \ $$ \  $$ /$$/ 
  |  $$$$$$ | $$            | $$        | $$  | $$$$$$$ | $$$$$$$/| $$$$$$$$| $$$$$$$/  \  $$$$/  
   \____  $$| $$            | $$        | $$  | $$__  $$| $$__  $$| $$__  $$| $$__  $$   \  $$/   
   /$$  \ $$| $$    $$      | $$        | $$  | $$  \ $$| $$  \ $$| $$  | $$| $$  \ $$    | $$    
  |  $$$$$$/|  $$$$$$/      | $$$$$$$$ /$$$$$$| $$$$$$$/| $$  | $$| $$  | $$| $$  | $$    | $$    
   \______/  \______/       |________/|______/|_______/ |__/  |__/|__/  |__/|__/  |__/    |__/
    \                                                                                                                                                                           
     \
      \_______________________________________________________________________________________________         
      made by Salad                                                                                      
  ]]
  local Library = {}
  local player = game.Players.LocalPlayer
  local plrgui = player:WaitForChild("PlayerGui")
  
  
  --a friend gave me those so yea, he wanted to help with da script, idk if he actually made them, if he didnt then credits to the owner and i will completely remake them in case you dont want it to be there.
  
  local function createmyass(baller, yezzplezbobux)
      local instance = Instance.new(baller)
      for property, value in pairs(yezzplezbobux) do
          instance[property] = value
      end
      return instance
  end
  
  local ToggleFunctions = {}
  
  local keybindthingtable = {}  
  local UIS = game:GetService("UserInputService")
  local pathforfolderofkeybindz = "SC 0.1/Keybinds"
  
  local function doingthefunnies(modules, startPosition, adjustAmount)
      for i, module in pairs(modules:GetChildren()) do
          if module.Position.Y.Offset > startPosition.Y.Offset then 
              module.Position = module.Position + UDim2.new(0, 0, 0, adjustAmount)
          end
      end
  end
  
  local function saveKeybind(moduleName, key)
      local pathfortxt = pathforfolderofkeybindz .. "/" .. moduleName .. ".txt"
      
      if not isfolder(pathforfolderofkeybindz) then
          makefolder(pathforfolderofkeybindz)
      end
  
      if key then
          writefile(pathfortxt, key)
      else
          writefile(pathfortxt, "UNSET")
      end
  end
  
  local function loadKeybind(moduleName)
      local pathfortxt = pathforfolderofkeybindz .. "/" .. moduleName .. ".txt"
      
      if isfile(pathfortxt) then
          local content = readfile(pathfortxt)
          if content == "UNSET" then
              return nil
          else
              return content
          end
      end
      return nil
  end

  local SCArray = {
    Modules = {}
}

local stepIncrement = 0.09 
local globalRainbowTime = 0

local function GlobalRainbowUpdate()
    while true do
        globalRainbowTime = (globalRainbowTime + stepIncrement) % (2 * math.pi)
        wait(0.12)
    end
end

local function GetRainbowColor(offset)
    local r = 0.5 + 0.5 * math.sin(globalRainbowTime + offset)
    local g = 0.5 + 0.5 * math.sin(globalRainbowTime + offset + 2 * math.pi / 3)
    local b = 0.5 + 0.5 * math.sin(globalRainbowTime + offset + 4 * math.pi / 3)
    return Color3.new(r, g, b)
end

local function UpdateModulesColor()
    while true do
        for i, module in ipairs(SCArray.Modules) do
            local color = GetRainbowColor(i * stepIncrement)
            module._ModuleName.TextColor3 = color
            module._MiniFrame.BackgroundColor3 = color
        end
        wait(0.1)
    end
end

coroutine.wrap(GlobalRainbowUpdate)()  
coroutine.wrap(UpdateModulesColor)()   

function SCArray:CreateModuleUI(moduleName)
    local Converted = {
        _ArrayList = Instance.new("ScreenGui"),
        _Container = Instance.new("Frame"),
        _ModuleName = Instance.new("TextLabel"),
        _MiniFrame = Instance.new("Frame")
    }

    Converted._ArrayList.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    Converted._ArrayList.Name = "ArrayList"
    Converted._ArrayList.Parent = plrgui

    Converted._Container.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Converted._Container.BackgroundTransparency = 0.800000011920929
    Converted._Container.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Converted._Container.BorderSizePixel = 0
    Converted._Container.Transparency = 1
    Converted._Container.Name = "Container"
    Converted._Container.Parent = Converted._ArrayList

    Converted._ModuleName.Font = Enum.Font.SourceSans
    Converted._ModuleName.Text = moduleName
    Converted._ModuleName.TextColor3 = Color3.fromRGB(255, 255, 255)
    Converted._ModuleName.TextScaled = true
    Converted._ModuleName.TextSize = 14
    Converted._ModuleName.BackgroundTransparency = 0.3
    Converted._ModuleName.TextWrapped = true
    Converted._ModuleName.Font = Enum.Font.Sarpanch
    Converted._ModuleName.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    Converted._ModuleName.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Converted._ModuleName.BorderSizePixel = 0
    Converted._ModuleName.Name = moduleName
    Converted._ModuleName.Parent = Converted._Container

    Converted._MiniFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Converted._MiniFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
    Converted._MiniFrame.BorderSizePixel = 0
    Converted._MiniFrame.Position = UDim2.new(1.02, 0, 0, 0)
    Converted._MiniFrame.Size = UDim2.new(0, 7, 0, 26)
    Converted._MiniFrame.Name = moduleName
    Converted._MiniFrame.Parent = Converted._Container

    return Converted
end

function SCArray:SortModules()
    table.sort(self.Modules, function(a, b)
        if a._ModuleName.Size.X.Offset == b._ModuleName.Size.X.Offset then
            return a._ModuleName.Text < b._ModuleName.Text
        end
        return a._ModuleName.Size.X.Offset > b._ModuleName.Size.X.Offset
    end)
end

function SCArray:adjustModuleSize(module)
    local baseWidth = #module._ModuleName.Text * 8
    module._ModuleName.Size = UDim2.new(0, baseWidth, 0, 26)
    module._Container.Size = UDim2.new(0, baseWidth, 0, 26)
    local desiredOffset = 5 
    module._MiniFrame.Position = UDim2.new(0, module._Container.Size.X.Offset + desiredOffset, 0, 0)

    module._MiniFrame.Size = UDim2.new(0, 5, 0, 26)
end


function SCArray:UpdateModulePositions()
    local spacing = 1
    local currentY = 0
    local screenWidth = game:GetService("Workspace").CurrentCamera.ViewportSize.X

    for _, module in ipairs(self.Modules) do
        local moduleTotalWidth = module._Container.Size.X.Offset
        module._Container.Position = UDim2.new(0, screenWidth - moduleTotalWidth - 7, 0, currentY)
        currentY = currentY + 24 + spacing
    end
end

function SCArray:Add(moduleName)
    local module = self:CreateModuleUI(moduleName)
    self:adjustModuleSize(module)
    module.creationTime = os.clock()  
    table.insert(self.Modules, module)
    self:SortModules()
    self:UpdateModulePositions()
end


function SCArray:Remove(moduleName)
    for i, module in ipairs(self.Modules) do
        if module._ModuleName.Name == moduleName then
            table.remove(self.Modules, i)
            module._ModuleName:Destroy()
            --print("Module removed: " .. moduleName)
        if module._MiniFrame.Name == moduleName then 
            module._MiniFrame:Destroy()
            --print("Miniframe removed for: " .. moduleName)
            self:UpdateModulePositions()
            return true
        end
    end
end
print("Module not found: " .. moduleName)
    return false
end

  local function keyBindThingOmg(module, TabWrapper)
      if keybindthingtable[module] and keybindthingtable[module].Visible then
          keybindthingtable[module].Visible = false
          doingthefunnies(TabWrapper.Modules, module.Position + UDim2.new(0, 0, 1, 0), -37) 
      else
          activeToggle = module
          local KeyBind = createmyass("ScreenGui", {
              ZIndexBehavior = Enum.ZIndexBehavior.Sibling,
              Name = "KeyBind",
              Parent = plrgui
          })
          
          local Frame = createmyass("Frame", {
              BackgroundColor3 = Color3.fromRGB(59, 59, 59),
              BackgroundTransparency = 0.6,
              BorderColor3 = Color3.fromRGB(0, 0, 0),
              BorderSizePixel = 0,
              Position = UDim2.new(0.408022135, 0, 0.502427161, 0),
              Size = UDim2.new(0, 232, 0, 37),
              Parent = KeyBind,
              Name = "KeyBind"
          })
          
          local TextBox = createmyass("TextBox", {
              CursorPosition = -1,
              Font = Enum.Font.SourceSans,
              Text = "",
              TextColor3 = Color3.fromRGB(255, 255, 255),
              TextScaled = true,
              TextSize = 14,
              TextWrapped = true,
              BackgroundColor3 = Color3.fromRGB(68, 68, 68),
              BorderColor3 = Color3.fromRGB(0, 0, 0),
              BorderSizePixel = 0,
              Position = UDim2.new(0.844827592, 0, 0.162162155, 0),
              Size = UDim2.new(0, 30, 0, 24),
              Parent = Frame
          })
          
          local DropShadowHolder = createmyass("Frame", {
              BackgroundTransparency = 1,
              BorderSizePixel = 0,
              Size = UDim2.new(1, 0, 1, 0),
              ZIndex = 0,
              Name = "DropShadowHolder",
              Parent = TextBox
          })
          
          createmyass("ImageLabel", {
              Image = "rbxassetid://6014261993",
              ImageColor3 = Color3.fromRGB(0, 0, 0),
              ImageTransparency = 0.5,
              ScaleType = Enum.ScaleType.Slice,
              SliceCenter = Rect.new(49, 49, 450, 450),
              AnchorPoint = Vector2.new(0.5, 0.5),
              BackgroundTransparency = 1,
              BorderSizePixel = 0,
              Position = UDim2.new(0.533333361, 0, 0.479166657, 0),
              Size = UDim2.new(0.400000006, 47, 0.291666657, 47),
              ZIndex = 0,
              Name = "DropShadow",
              Parent = DropShadowHolder
          })
          
          createmyass("TextLabel", {
              Font = Enum.Font.Sarpanch,
              Text = "Keybind:",
              TextColor3 = Color3.fromRGB(255, 255, 255),
              TextScaled = true,
              TextSize = 14,
              TextWrapped = true,
              TextXAlignment = Enum.TextXAlignment.Left,
              BackgroundColor3 = Color3.fromRGB(255, 255, 255),
              BackgroundTransparency = 1,
              BorderColor3 = Color3.fromRGB(0, 0, 0),
              BorderSizePixel = 0,
              Size = UDim2.new(0, 132, 0, 37),
              Parent = Frame
          })
          
          local tabaleofshit = {}
  
          local savedBind = loadKeybind(module.Name)
  
          if savedBind and savedBind ~= "" then
              TextBox.Text = savedBind
          else
              TextBox.Text = "" 
          end
      
          local function mooonkeee()
              local script = createmyass("LocalScript", {
                  Name = "LocalScript",
                  Parent = TextBox
              })
          
              local req = require
              local require = function(obj)
                  local fake = tabaleofshit[obj]
                  if fake then
                      return fake()
                  end
                  return req(obj)
              end
          
              local ballzzz = script.Parent
          
              local function yesyestrolz(shitting)
                  local ballingz = string.sub(shitting, 1, 1)
              
                  if #shitting > 1 then 
                      return ballingz:upper() 
                  elseif ballingz:match("%a") then
                      return string.upper(ballingz)
                  end
                  return ""
              end
  
              local activeToggle = false
              
              TextBox.FocusLost:Connect(function()
                  local keyCodeName = TextBox.Text
                  if keyCodeName and keyCodeName ~= "" and Enum.KeyCode[keyCodeName] then
                      saveKeybind(module.Name, keyCodeName)
                  else
                      saveKeybind(module.Name, nil)  
                  end                
              end)
              
  
              ballzzz:GetPropertyChangedSignal("Text"):Connect(function()
                  if #ballzzz.Text > 0 then
                      ballzzz.Active = false
                      ballzzz.Active = true
                  end
                  ballzzz.Text = yesyestrolz(ballzzz.Text)
              end)
          
              ballzzz.Focused:Connect(function()
                  ballzzz.Text = "..." 
              end)
          
              ballzzz.FocusLost:Connect(function()
                  ballzzz.Text = yesyestrolz(ballzzz.Text)
              end)
          end
          
          coroutine.wrap(mooonkeee)()
          doingthefunnies(TabWrapper.Modules, module.Position + UDim2.new(0, 0, 2, 0), 37)
          Frame.Position = module.Position + UDim2.new(0, 0, 1, 0)
          Frame.Parent = TabWrapper.Modules
          keybindthingtable[module] = Frame
      end
  end
  
  UIS.InputBegan:Connect(function(input, isProcessed)
      if isProcessed then return end
  
      for module, _ in pairs(keybindthingtable) do
          local bind = loadKeybind(module.Name)
          if bind and bind ~= "" and input.KeyCode.Name == bind then
              if ToggleFunctions[module.Name] then
                  ToggleFunctions[module.Name]()  
              end
          end
      end    
  end)
  
  
  local tabposomagawd = { 
      [1] = UDim2.new(0, 371, 0, 194),
      [2] = UDim2.new(0, 604, 0, 194),
      [3] = UDim2.new(0, 837, 0, 194),
      [4] = UDim2.new(0, 1070, 0, 194),
      [5] = UDim2.new(0, 1303, 0, 194), 
      [6] = UDim2.new(0, 1536, 0, 194), 
      [7] = UDim2.new(0, 1769, 0, 194), 
  }
  
  
  local daheight = 36
  local daspaaaaaaceyesyes = 1.6
  local ts = game:GetService("TweenService")
  
  local function getNextPosition(parent)
      local children = parent:GetChildren()
      local lastChild
      
      for i = #children, 1, -1 do
          if children[i]:IsA("GuiObject") then
              lastChild = children[i]
              break
          end
      end
  
      if lastChild then
          return UDim2.new(0, 0, 0, lastChild.Position.Y.Offset + daheight + daspaaaaaaceyesyes)
      else
          return UDim2.new(0, 0, 0, daheight)  
      end
  end
  
  
  function Library:Initialize()
      local thingfornoduplicating = plrgui:FindFirstChild("SC_LIBRARY")
      if thingfornoduplicating then
          thingfornoduplicating:Destroy()
      end
  
      gay = createmyass("ScreenGui", {
          Name = "SC_LIBRARY",
          Parent = plrgui,
          ZIndexBehavior = Enum.ZIndexBehavior.Sibling
      })
      self.ToggleBind = Enum.KeyCode.Y
      local gay = gay
      local gayvisibleomg = false
  
      local function toggleLibrary()
          if gayvisibleomg then
              for _, tab in pairs(gay:GetChildren()) do
                  if tab:IsA("Frame") then
                      tab.AnchorPoint = Vector2.new(0.5, 0.5)
                      
                      local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quart, Enum.EasingDirection.In)
                      local goal = {}
                      goal.Size = UDim2.new(0, 232 * 0.7, 0, 37 * 0.7)  
                      
                      local tween = ts:Create(tab, tweenInfo, goal)
                      
                      if tab == gay:GetChildren()[#gay:GetChildren()] then
                          tween.Completed:Connect(function()
                              gay.Enabled = false
                              local blurzfornoduplicating = game.Workspace.CurrentCamera:FindFirstChild("LibraryBlur")
                              if blurzfornoduplicating then
                                  blurzfornoduplicating:Destroy()
                              end
                          end)
                      end
                      tween:Play()
                  end
              end
          else
              gay.Enabled = true
              
              for _, tab in pairs(gay:GetChildren()) do
                  if tab:IsA("Frame") then
                      tab.AnchorPoint = Vector2.new(0.5, 0.5)
                      
                      local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out)
                      local goal = {}
                      goal.Size = UDim2.new(0, 232, 0, 37)
                      
                      local tween = ts:Create(tab, tweenInfo, goal)
                      tween:Play()
                  end
              end
      
              if not game.Workspace.CurrentCamera:FindFirstChild("LibraryBlur") then
                  local blurholycow = Instance.new("BlurEffect")
                  blurholycow.Name = "LibraryBlur"
                  blurholycow.Size = 25
                  blurholycow.Parent = game.Workspace.CurrentCamera
              end
          end
          
          gayvisibleomg = not gayvisibleomg
      end
      
      
      UIS.InputBegan:Connect(function(input, isProcessed)
          if not isProcessed and input.KeyCode == self.ToggleBind then
              toggleLibrary()
          end
      end)
  end
  
  function Library:SetToggleBind(keyCode) 
      if typeof(keyCode) == "EnumItem" and keyCode.EnumType == Enum.KeyCode then
          self.ToggleBind = keyCode
      else
          warn("Invalid KeyCode provided. Usage: Library:SetToggleBind(Enum.KeyCode.KEY)")
      end
  end
  
  local TweenService = game:GetService("TweenService")
  
  
  local basePosition = UDim2.new(0.829351485, 0, 0.878640711, 0)
  
  function warning(title, message, timer, includeToggleBind)
  
      if includeToggleBind then
        message = "\nPress " .. Library.ToggleBind.Name .. " to open the GUI"
      end

      local Converted = {
          ["_Notification"] = Instance.new("ScreenGui");
          ["_MainNotif"] = Instance.new("Frame");
          ["_DropShadowHolder"] = Instance.new("Frame");
          ["_DropShadow"] = Instance.new("ImageLabel");
          ["_ImageLabel"] = Instance.new("ImageLabel");
          ["_UIGradient"] = Instance.new("UIGradient");
          ["_UICorner"] = Instance.new("UICorner");
          ["_UIStroke"] = Instance.new("UIStroke");
          ["_Title"] = Instance.new("TextLabel");
          ["_Message"] = Instance.new("TextLabel");
          ["_LocalScript"] = Instance.new("LocalScript");
      }
      
      Converted["_Notification"].ZIndexBehavior = Enum.ZIndexBehavior.Sibling
      Converted["_Notification"].Name = "Notification"
      Converted["_Notification"].Parent = plrgui
      
      
      Converted["_MainNotif"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
      Converted["_MainNotif"].BackgroundTransparency = 0.20000000298023224
      Converted["_MainNotif"].BorderColor3 = Color3.fromRGB(0, 0, 0)
      Converted["_MainNotif"].BorderSizePixel = 0
      Converted["_MainNotif"].Position = UDim2.new(1, 0, 1, 0)
      Converted["_MainNotif"].Size = UDim2.new(0, 312, 0, 96)
      Converted["_MainNotif"].Name = "MainNotif"
      Converted["_MainNotif"].Parent = plrgui.Notification
      
      Converted["_DropShadowHolder"].BackgroundTransparency = 1
      Converted["_DropShadowHolder"].BorderSizePixel = 0
      Converted["_DropShadowHolder"].Size = UDim2.new(1, 0, 1, 0)
      Converted["_DropShadowHolder"].ZIndex = 0
      Converted["_DropShadowHolder"].Name = "DropShadowHolder"
      Converted["_DropShadowHolder"].Parent = Converted["_MainNotif"]
      
      Converted["_DropShadow"].Image = "rbxassetid://6014261993"
      Converted["_DropShadow"].ImageColor3 = Color3.fromRGB(0, 0, 0)
      Converted["_DropShadow"].ImageTransparency = 0.5
      Converted["_DropShadow"].ScaleType = Enum.ScaleType.Slice
      Converted["_DropShadow"].SliceCenter = Rect.new(49, 49, 450, 450)
      Converted["_DropShadow"].AnchorPoint = Vector2.new(0.5, 0.5)
      Converted["_DropShadow"].BackgroundTransparency = 1
      Converted["_DropShadow"].BorderSizePixel = 0
      Converted["_DropShadow"].Position = UDim2.new(0.5, 0, 0.5, 0)
      Converted["_DropShadow"].Size = UDim2.new(1, 47, 1, 47)
      Converted["_DropShadow"].ZIndex = 0
      Converted["_DropShadow"].Name = "DropShadow"
      Converted["_DropShadow"].Parent = Converted["_DropShadowHolder"]
      
      Converted["_ImageLabel"].Image = "http://www.roblox.com/asset/?id=11745872910"
      Converted["_ImageLabel"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
      Converted["_ImageLabel"].BackgroundTransparency = 1
      Converted["_ImageLabel"].BorderColor3 = Color3.fromRGB(0, 0, 0)
      Converted["_ImageLabel"].BorderSizePixel = 0
      Converted["_ImageLabel"].Position = UDim2.new(0.0254555736, 0, 0.0625, 0)
      Converted["_ImageLabel"].Size = UDim2.new(0, 88, 0, 84)
      Converted["_ImageLabel"].Parent = Converted["_MainNotif"]
      
      Converted["_UIGradient"].Color = ColorSequence.new{
          ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 218.00000220537186, 8.000000473111868)),
          ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 128.0000075697899, 0))
      }
      Converted["_UIGradient"].Parent = Converted["_ImageLabel"]
      
      Converted["_UICorner"].Parent = Converted["_MainNotif"]
      
      Converted["_UIStroke"].Color = Color3.fromRGB(255, 157.0000058412552, 0)
      Converted["_UIStroke"].Parent = Converted["_MainNotif"]
      
      
      Converted["_Title"].Font = Enum.Font.SciFi
      Converted["_Title"].Text = title
      Converted["_Title"].TextColor3 = Color3.fromRGB(255, 255, 255)
      Converted["_Title"].TextScaled = true
      Converted["_Title"].TextSize = 14
      Converted["_Title"].TextWrapped = true
      Converted["_Title"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
      Converted["_Title"].BackgroundTransparency = 1
      Converted["_Title"].BorderColor3 = Color3.fromRGB(0, 0, 0)
      Converted["_Title"].BorderSizePixel = 0
      Converted["_Title"].Position = UDim2.new(0.23058261, 0, 0, 0)
      Converted["_Title"].Size = UDim2.new(0, 238, 0, 40)
      Converted["_Title"].Name = "Title"
      Converted["_Title"].Parent = Converted["_MainNotif"]
      
      Converted["_Message"].Font = Enum.Font.SciFi
      Converted["_Message"].Text = message
      Converted["_Message"].TextColor3 = Color3.fromRGB(255, 255, 255)
      Converted["_Message"].TextScaled = true
      Converted["_Message"].TextSize = 14
      Converted["_Message"].TextWrapped = true
      Converted["_Message"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
      Converted["_Message"].BackgroundTransparency = 1
      Converted["_Message"].BorderColor3 = Color3.fromRGB(0, 0, 0)
      Converted["_Message"].BorderSizePixel = 0
      Converted["_Message"].Position = UDim2.new(0.291865835, 0, 0.479166657, 0)
      Converted["_Message"].Size = UDim2.new(0, 222, 0, 40)
      Converted["_Message"].Name = "Message"
      Converted["_Message"].Parent = Converted["_MainNotif"]
  
      Sounddd = Instance.new("Sound")
      Sounddd.Parent = game:GetService("SoundService")
      Sounddd.SoundId = "rbxassetid://6176997734"
      Sounddd.Volume = 0.5
      Sounddd:Play()
  
      local script = Instance.new("LocalScript")
      script.Name = "LocalScript"
      script.Parent = Converted["_MainNotif"]
      local notif = script.Parent
      
      local ts = game:GetService("TweenService")
      local title = notif.Title.Text
      local message = notif.Message.Text
      
      local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Quint)
      local tween = TweenService:Create(notif, tweenInfo, {Position = basePosition})
      tween:Play()
      local goal2 = {
          Position = UDim2.new(1, 0, 1, 0)
      }
      
      local tweenInfo2 = TweenInfo.new(2, Enum.EasingStyle.Quint)
      local tween2 = ts:Create(notif, tweenInfo2, goal2)
      wait(timer)
      tween2:Play()
      wait(2)
      Converted["_MainNotif"]:Destroy()
  end
  
  local TweenService = game:GetService("TweenService")
  
  
  local basePosition = UDim2.new(0.829351485, 0, 0.878640711, 0)
  
  function notification(title, message, timer)

      local Converted = {
          ["_Notification"] = Instance.new("ScreenGui");
          ["_MainNotif"] = Instance.new("Frame");
          ["_DropShadowHolder"] = Instance.new("Frame");
          ["_DropShadow"] = Instance.new("ImageLabel");
          ["_ImageLabel"] = Instance.new("ImageLabel");
          ["_UIGradient"] = Instance.new("UIGradient");
          ["_UICorner"] = Instance.new("UICorner");
          ["_UIStroke"] = Instance.new("UIStroke");
          ["_Title"] = Instance.new("TextLabel");
          ["_Message"] = Instance.new("TextLabel");
          ["_LocalScript"] = Instance.new("LocalScript");
      }
      
      Converted["_Notification"].ZIndexBehavior = Enum.ZIndexBehavior.Sibling
      Converted["_Notification"].Name = "Notification"
      Converted["_Notification"].Parent = plrgui
      
      
      Converted["_MainNotif"].BackgroundColor3 = Color3.fromRGB(0, 0, 0)
      Converted["_MainNotif"].BackgroundTransparency = 0.20000000298023224
      Converted["_MainNotif"].BorderColor3 = Color3.fromRGB(0, 0, 0)
      Converted["_MainNotif"].BorderSizePixel = 0
      Converted["_MainNotif"].Position = UDim2.new(1, 0, 1, 0)
      Converted["_MainNotif"].Size = UDim2.new(0, 312, 0, 96)
      Converted["_MainNotif"].Name = "MainNotif"
      Converted["_MainNotif"].Parent = plrgui.Notification
      
      Converted["_DropShadowHolder"].BackgroundTransparency = 1
      Converted["_DropShadowHolder"].BorderSizePixel = 0
      Converted["_DropShadowHolder"].Size = UDim2.new(1, 0, 1, 0)
      Converted["_DropShadowHolder"].ZIndex = 0
      Converted["_DropShadowHolder"].Name = "DropShadowHolder"
      Converted["_DropShadowHolder"].Parent = Converted["_MainNotif"]
      
      Converted["_DropShadow"].Image = "rbxassetid://6014261993"
      Converted["_DropShadow"].ImageColor3 = Color3.fromRGB(0, 0, 0)
      Converted["_DropShadow"].ImageTransparency = 0.5
      Converted["_DropShadow"].ScaleType = Enum.ScaleType.Slice
      Converted["_DropShadow"].SliceCenter = Rect.new(49, 49, 450, 450)
      Converted["_DropShadow"].AnchorPoint = Vector2.new(0.5, 0.5)
      Converted["_DropShadow"].BackgroundTransparency = 1
      Converted["_DropShadow"].BorderSizePixel = 0
      Converted["_DropShadow"].Position = UDim2.new(0.5, 0, 0.5, 0)
      Converted["_DropShadow"].Size = UDim2.new(1, 47, 1, 47)
      Converted["_DropShadow"].ZIndex = 0
      Converted["_DropShadow"].Name = "DropShadow"
      Converted["_DropShadow"].Parent = Converted["_DropShadowHolder"]
      
      Converted["_ImageLabel"].Image = "http://www.roblox.com/asset/?id=11745872910"
      Converted["_ImageLabel"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
      Converted["_ImageLabel"].BackgroundTransparency = 1
      Converted["_ImageLabel"].BorderColor3 = Color3.fromRGB(0, 0, 0)
      Converted["_ImageLabel"].BorderSizePixel = 0
      Converted["_ImageLabel"].Position = UDim2.new(0.0254555736, 0, 0.0625, 0)
      Converted["_ImageLabel"].Size = UDim2.new(0, 88, 0, 84)
      Converted["_ImageLabel"].Parent = Converted["_MainNotif"]
      
      Converted["_UIGradient"].Color = ColorSequence.new{
          ColorSequenceKeypoint.new(0, Color3.fromRGB(30,144,255)),
          ColorSequenceKeypoint.new(1, Color3.fromRGB(0,191,255))
      }
      Converted["_UIGradient"].Parent = Converted["_ImageLabel"]
      
      Converted["_UICorner"].Parent = Converted["_MainNotif"]
      
      Converted["_UIStroke"].Color = Color3.fromRGB(135,206,250)
      Converted["_UIStroke"].Parent = Converted["_MainNotif"]
      
      
      Converted["_Title"].Font = Enum.Font.SciFi
      Converted["_Title"].Text = title
      Converted["_Title"].TextColor3 = Color3.fromRGB(255, 255, 255)
      Converted["_Title"].TextScaled = true
      Converted["_Title"].TextSize = 14
      Converted["_Title"].TextWrapped = true
      Converted["_Title"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
      Converted["_Title"].BackgroundTransparency = 1
      Converted["_Title"].BorderColor3 = Color3.fromRGB(0, 0, 0)
      Converted["_Title"].BorderSizePixel = 0
      Converted["_Title"].Position = UDim2.new(0.23058261, 0, 0, 0)
      Converted["_Title"].Size = UDim2.new(0, 238, 0, 40)
      Converted["_Title"].Name = "Title"
      Converted["_Title"].Parent = Converted["_MainNotif"]
      
      Converted["_Message"].Font = Enum.Font.SciFi
      Converted["_Message"].Text = message
      Converted["_Message"].TextColor3 = Color3.fromRGB(255, 255, 255)
      Converted["_Message"].TextScaled = true
      Converted["_Message"].TextSize = 14
      Converted["_Message"].TextWrapped = true
      Converted["_Message"].BackgroundColor3 = Color3.fromRGB(255, 255, 255)
      Converted["_Message"].BackgroundTransparency = 1
      Converted["_Message"].BorderColor3 = Color3.fromRGB(0, 0, 0)
      Converted["_Message"].BorderSizePixel = 0
      Converted["_Message"].Position = UDim2.new(0.291865835, 0, 0.479166657, 0)
      Converted["_Message"].Size = UDim2.new(0, 222, 0, 40)
      Converted["_Message"].Name = "Message"
      Converted["_Message"].Parent = Converted["_MainNotif"]
  
      local script = Instance.new("LocalScript")
      script.Name = "LocalScript"
      script.Parent = Converted["_MainNotif"]
      local notif = script.Parent
      
      local ts = game:GetService("TweenService")
      local title = notif.Title.Text
      local message = notif.Message.Text
      
      local tweenInfo = TweenInfo.new(2, Enum.EasingStyle.Quint)
      local tween = TweenService:Create(notif, tweenInfo, {Position = basePosition})
      tween:Play()
      local goal2 = {
          Position = UDim2.new(1, 0, 1, 0)
      }
      
      local tweenInfo2 = TweenInfo.new(2, Enum.EasingStyle.Quint)
      local tween2 = ts:Create(notif, tweenInfo2, goal2)
      wait(timer)
      tween2:Play()
      wait(2)
      Converted["_MainNotif"]:Destroy()
  end

  
  function Library:CreateTab(name, position, imageId) 
      local Tab = createmyass("Frame", {
          BackgroundColor3 = Color3.fromRGB(15, 15, 15),
          BorderColor3 = Color3.fromRGB(0, 0, 0),
          BorderSizePixel = 0,
          Position = tabposomagawd[position] or UDim2.new(0,0,0,0),
          Size = UDim2.new(0, 232, 0, 37),
          Name = name,
          Parent = gay,
          Draggable = true,
          Selectable = true,
          Active = true,
      })
  
      local TabImage = createmyass("ImageLabel", {
          Image = imageId,
          BackgroundTransparency = 1,
          BorderSizePixel = 0,
          Size = UDim2.new(0, 35, 1, 0),
          Position = UDim2.new(0, 10, 0, 0), 
          Name = "TabImage",
          Parent = Tab
      })
      
  
      local ImageToggle = createmyass("ImageButton", {
          Image = "http://www.roblox.com/asset/?id=278543076",
          BackgroundColor3 = Color3.fromRGB(255, 255, 255),
          BackgroundTransparency = 1,
          BorderColor3 = Color3.fromRGB(0, 0, 0),
          BorderSizePixel = 0,
          Position = UDim2.new(0.814814806, 0, 0.0571428575, 0),
          Size = UDim2.new(0, 35, 0, 33),
          Name = "Image",
          Parent = Tab
      })
  
      local Modules = createmyass("Folder", {
          Name = "Modules",
          Parent = Tab
      })
  
      local TabName = createmyass("TextLabel", {
          Font = Enum.Font.Roboto,
          Text = name,
          TextColor3 = Color3.fromRGB(255, 255, 255),
          TextScaled = true,
          TextSize = 14,
          TextWrapped = true,
          TextXAlignment = Enum.TextXAlignment.Center,
          BackgroundColor3 = Color3.fromRGB(255, 255, 255),
          BackgroundTransparency = 1,
          BorderColor3 = Color3.fromRGB(0, 0, 0),
          BorderSizePixel = 0,
          Size = UDim2.new(0, 234, 0, 32),
          Name = name,
          Parent = Tab
      })
  
      local TabLine = createmyass("Frame", {
          BackgroundColor3 = Color3.fromRGB(255, 255, 255), 
          BorderSizePixel = 0,
          Size = UDim2.new(1, 0, 0, 1),
          Position = UDim2.new(0, 0, 1, -1), 
          ZIndex = 1,
          Name = "TabLine",
          Parent = Tab
      })
      
  
      local toggled = true 
  
      ImageToggle.Image = "rbxassetid://14727864070"

      local function toggleVisibility(object, shouldShow)
          if object:IsA("GuiObject") then
              if not (object.Name and object.Name:find("KeyBind")) then
                  object.Visible = shouldShow
              else
                  print("Ignored item named: " .. object.Name)
              end
          else
              print("Encountered non-GuiObject named: " .. object.Name) 
          end
      
          for _, child in pairs(object:GetChildren()) do
              toggleVisibility(child, shouldShow)
          end
      end
      
      ImageToggle.MouseButton1Click:Connect(function()
          toggled = not toggled
      
          for _, item in pairs(Modules:GetChildren()) do
              toggleVisibility(item, toggled)
          end
      
          ImageToggle.Image = toggled and "rbxassetid://14727864070" or "rbxassetid://278543076"
          print("Toggled visibility to: " .. tostring(toggled)) 
      end)
      
      
    
  
      local TabWrapper = {
          Instance = Tab,
          Modules = Modules
      }

      function TabWrapper:CreateButton(name, callback)
          local Button = createmyass("TextButton", {
              Font = Enum.Font.Sarpanch,
              Text = name,
              TextColor3 = Color3.fromRGB(255, 255, 255),
              TextScaled = true,
              TextSize = 14,
              TextWrapped = true,
              TextXAlignment = Enum.TextXAlignment.Left,
              BackgroundColor3 = Color3.fromRGB(32, 32, 32),
              BackgroundTransparency = 0,
              BorderColor3 = Color3.fromRGB(0, 0, 0),
              BorderSizePixel = 0,
              Position = getNextPosition(self.Modules),
              Size = UDim2.new(0, 232, 0, 37),
              Name = "Button",
              Parent = self.Modules
          })  
  
          Button.MouseButton1Click:Connect(callback)
  
          Button.MouseButton2Click:Connect(function()
              keyBindThingOmg(Button, self)
          end)
          keyBindThingOmg(Button, self)
          keyBindThingOmg(Button, self)
          return Button
      end
      
      function TabWrapper:CreateToggle(name, callback)
        local ToggleButton = createmyass("TextButton", {
            Font = Enum.Font.Sarpanch,
            Text = name,
            TextColor3 = Color3.fromRGB(255, 255, 255),
            TextScaled = true,
            TextSize = 14,
            TextWrapped = true,
            TextXAlignment = Enum.TextXAlignment.Left,
            BackgroundColor3 = Color3.fromRGB(32, 32, 32),
            BackgroundTransparency = 0,
            BorderColor3 = Color3.fromRGB(0, 0, 0),
            BorderSizePixel = 0,
            Position = getNextPosition(self.Modules),
            Size = UDim2.new(0, 232, 0, 37),
            Name = name,
            Parent = self.Modules
        })
    
        local stateFilePath = "SC 0.1/Toggles/" .. name .. ".lua"
        local defaultColor = Color3.fromRGB(32, 32, 32)
        local toggled = false 
        local TweenService = game:GetService("TweenService")
        
        local function updateButtonColor()
            if toggled then
                local Gradient = ToggleButton:FindFirstChild("ColorTogleGrad")
                local RunService = game:GetService("RunService")

                if not Gradient then
                    Gradient = Instance.new("UIGradient")
                    Gradient.Name = "ColorTogleGrad"
                    Gradient.Parent = ToggleButton
    
                    local startTime = tick()
    
                    
                    local updateFunction = RunService.RenderStepped:Connect(function()
                        local elapsed = tick() - startTime
                        local progress = (elapsed % 2.5) / 2.5
                        local lerpValue = 0.5 * math.sin(progress * math.pi * 2) + 0.5
    
                        local colorA = Color3.fromRGB(30, 144, 255)
                        local colorB = Color3.fromRGB(0, 255, 255)
    
                        Gradient.Color = ColorSequence.new({
                            ColorSequenceKeypoint.new(0, colorA:Lerp(colorB, lerpValue)), 
                            ColorSequenceKeypoint.new(1, colorB:Lerp(colorA, lerpValue)) 
                        })
                    end)
    
                    ToggleButton.AncestryChanged:Connect(function(_, parent)
                        if not parent then
                            updateFunction:Disconnect()
                        end
                    end)
                end
                
                ToggleButton.BackgroundColor3 = Color3.fromRGB(30, 144, 255)
            else
                if ToggleButton:FindFirstChild("ColorTogleGrad") then
                    ToggleButton.ColorTogleGrad:Destroy()
                end
                ToggleButton.BackgroundColor3 = defaultColor
            end
        end
        
        
        local function writetrueomg(name)
            local folderPath = "SC 0.1/Toggles"
            local filePath = folderPath .. "/" .. name .. ".lua"
            writefile(filePath, "true")
        end
        
        local function writefalseomgx2(name)
            local folderPath = "SC 0.1/Toggles"
            local filePath = folderPath .. "/" .. name .. ".lua"
            writefile(filePath, "false")
        end        
        local function saveToggleState()
            writefile(stateFilePath, tostring(toggled))
        end  
        local function loadToggleState()
            if isfile(stateFilePath) then
                local fileContents = readfile(stateFilePath)
                toggled = (fileContents == "true")
                updateButtonColor()
                callback(toggled)
                if toggled then
                    SCArray:Add(name)
                end
            end
        end              
        loadToggleState()
        local function toggleModule()
            toggled = not toggled
            updateButtonColor()
            callback(toggled)
            if toggled then
                writetrueomg(name)
                SCArray:Add(name)
                notification("Toggled a module:", "Toggled on "..name, 2)
            else
                writefalseomgx2(name)
                SCArray:Remove(name)
                notification("Toggled a module:", "Toggled off "..name, 2)
            end
        end
    
        ToggleButton.MouseButton1Click:Connect(toggleModule)
        ToggleFunctions[name] = toggleModule
    
        ToggleButton.MouseButton2Click:Connect(function()
            keyBindThingOmg(ToggleButton, self)
        end)
        for _, item in pairs(Modules:GetChildren()) do
            if item:IsA("TextButton") then
                keyBindThingOmg(item, self)
            end
        end
        for _, item in pairs(Modules:GetChildren()) do
            if item:IsA("TextButton") then
                keyBindThingOmg(item, self)
            end
        end
        keyBindThingOmg(ToggleButton, self)
        keyBindThingOmg(ToggleButton, self)
        
        return ToggleButton
    end
    
    return TabWrapper
end    
  
  Library:Initialize()
  gay.Enabled = gayvisibleomg
  if blurholycow then
      blurholycow:Destroy()
  end
  print("No errors with the library epik")

  return Library
